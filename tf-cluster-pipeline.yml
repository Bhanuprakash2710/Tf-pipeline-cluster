trigger:
- main

variables:
- name: DEV_ENVIRONMENT
  value: dev
- name: QA_ENVIRONMENT
  value: qa

pool:
  vmImage: ubuntu-latest

stages:
- stage: TerraformValidate
  jobs:
    - job: TerraformValidateJob
      continueOnError: false
      steps:
      - script: |
          sudo apt-get update
          sudo apt-get install -y unzip
          curl -Lo terraform.zip https://releases.hashicorp.com/terraform/1.0.0/terraform_1.0.0_linux_amd64.zip
          unzip terraform.zip
          sudo mv terraform /usr/local/bin/
          terraform version
        displayName: 'Install and Verify Terraform'

      - task: PublishPipelineArtifact@1
        displayName: Publish Artifacts
        inputs:
          targetPath: '$(System.DefaultWorkingDirectory)/Terraform-manifest'
          artifact: 'Terraform-manifest-out'
          publishLocation: 'pipeline'
      
      - task: TerraformCLI@2
        displayName: Terraform Init
        inputs:
          command: 'init'
          workingDirectory: '$(System.DefaultWorkingDirectory)/Terraform-manifest'
          backendType: 'azurerm'
          backendServiceArm: 'terraform-aks-azurerm-svc-con'
          backendAzureRmResourceGroupName: 'rg-storage-accounts-1'
          backendAzureRmStorageAccountName: 'tfstorageaccountbhanu'
          backendAzureRmContainerName: 'tfstatefiles'
          backendAzureRmKey: 'tf-cluster.tfstate'
          allowTelemetryCollection: false

      - task: TerraformCLI@2
        displayName: Terraform Validate
        inputs:
          command: 'validate'
          workingDirectory: '$(System.DefaultWorkingDirectory)/Terraform-manifest'
          allowTelemetryCollection: false

- stage: DeployAKSCluster
  jobs:
    - deployment: DeployDevAksCluster
      displayName: DeployDevAksCluster
      pool:
        vmImage: 'ubuntu-latest'
      environment: $(DEV_ENVIRONMENT)
      strategy:
        runOnce:
          deploy:
            steps:
            - script: |
                sudo apt-get update
                sudo apt-get install -y unzip
                curl -Lo terraform.zip https://releases.hashicorp.com/terraform/1.0.0/terraform_1.0.0_linux_amd64.zip
                unzip terraform.zip
                sudo mv terraform /usr/local/bin/
                terraform version
              displayName: 'Install and Verify Terraform'

            - task: TerraformCLI@2
              displayName: Terraform Init
              inputs:
                command: 'init'
                workingDirectory: '$(Pipeline.Workspace)/Terraform-manifests-out'
                backendType: 'azurerm'
                backendServiceArm: 'terraform-aks-azurerm-svc-con'
                backendAzureRmResourceGroupName: 'rg-storage-accounts-1'
                backendAzureRmStorageAccountName: 'tfstorageaccountbhanu'
                backendAzureRmContainerName: 'tfstatefiles'
                backendAzureRmKey: 'tf-cluster.tfstate'
                allowTelemetryCollection: false

            - task: TerraformCLI@2
              displayName: Terraform Plan
              inputs:
                command: 'plan'
                workingDirectory: '$(Pipeline.Workspace)/Terraform-manifests-out'
                environmentServiceName: 'terraform-aks-azurerm-svc-con'
                allowTelemetryCollection: true

            - task: TerraformCLI@2
              displayName: Terraform Apply
              inputs:
                command: 'apply'
                workingDirectory: '$(Pipeline.Workspace)/Terraform-manifests-out'
                environmentServiceName: 'terraform-aks-azurerm-svc-con'
                allowTelemetryCollection: true
